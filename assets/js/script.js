"use strict";var _createClass=function(){function a(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(e,t,n){return t&&a(e.prototype,t),n&&a(e,n),e}}();function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var w=$(window).width();$(document).ready(function(){if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Oper|a Mini/i.test(navigator.userAgent))location.href="cv/";else{$(".circle-container li").click(function(){var e=$(this).attr("data-tab"),t=($(".tab-content-container > .tab-content").length,$("#"+e));$(".circle-container li").removeClass("current"),$(".circle-container li").removeClass("current_over"),$(".tab-content").removeClass("current"),$(this).addClass("current"),t.addClass("current"),$(".circle-container li.current").next().addClass("current_over"),$(".circle-container li.current").prev().addClass("current_over")});var r,o={setting:{$wrapper:$(".container"),$container:$(".circle-container"),$nodes:$(".circle-container > .item"),$_nodes:$(".circle-container > .item").length,$number:$(".number"),$numberItems:$(".number > li"),$current:0,$isAuto:!1,$acAuto:6500},init:function(){r=this.setting,this.initEvents()},initEvents:function(){window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e,t){window.setTimeout(e,1e3/60)},window.requestInterval=function(n,a){if(!(window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame))return window.setInterval(n,a);var i=(new Date).getTime(),s=new Object;return s.value=requestAnimFrame(function e(){var t=(new Date).getTime();a<=t-i&&(n.call(),i=(new Date).getTime()),s.value=requestAnimFrame(e)}),s},window.clearRequestInterval=function(e){window.cancelAnimationFrame?window.cancelAnimationFrame(e.value):window.webkitCancelRequestAnimationFrame?window.webkitCancelRequestAnimationFrame(e.value):window.mozCancelRequestAnimationFrame?window.mozCancelRequestAnimationFrame(e.value):window.oCancelRequestAnimationFrame?window.oCancelRequestAnimationFrame(e.value):window.msCancelRequestAnimationFrame?msCancelRequestAnimationFrame(e.value):clearInterval(e)};var e,t,a=(t=!1,e=navigator.userAgent||navigator.vendor||window.opera,(/(android|ipad|playbook|silk|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4)))&&(t=!0),t?"touchstart":"click");$.each(r.$nodes,function(t){var n=$(this);n.find("a").on(a,function(e){e.preventDefault(),i(t),o.getRotate(n,t)})}),$.each(r.$numberItems,function(t){$(this).find("a").on(a,function(e){e.preventDefault(),i(t),o.getRotate(r.$nodes.eq(t),t)})});var n=function(e){r.$isAuto?r.$current===r.$_nodes-1?r.$current=0:r.$current++:r.$current=e,o.getRotate(r.$nodes.eq(r.$current),r.$current)},i=function(e){clearRequestInterval(s),r.$isAuto=!1,n(e)},s=requestInterval(n,r.$acAuto);"ontouchstart"in document.documentElement||(document.documentElement.className+=" no-touch")},getRotate:function(e,t){for(var n=360/r.$_nodes,a=r.$container.width(),i=0;i<r.$_nodes;i++){var s=Math.round(720+n*i+-n*t);r.$nodes.eq(i).css({transform:"rotate("+s+"deg) translate("+a/2+"px) rotate(-"+s+"deg)"})}r.$nodes.find("a").not(e).removeClass("activedoit"),e.find("a").addClass("activedoit"),r.$numberItems.find("a").not(r.$numberItems.eq(t)).removeClass("activedoit"),r.$numberItems.eq(t).find("a").not().addClass("activedoit")}};o.init();var n=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"get",value:function(e){for(var t=e.parentNode.children,n=0;n<t.length;n++){if(t[n]==e)return n}}}]),e}();new(function(){function t(e){_classCallCheck(this,t),this.move=this.move.bind(this),this.moveByButton=this.moveByButton.bind(this),this.slider=document.querySelector(e),this.itemsCount=document.querySelectorAll(".tab-content-container > *").length,this.interval=null,this.contador=0,this.bindEvents(),this.buildControls()}return _createClass(t,[{key:"start",value:function(){this.interval=window.setInterval(this.move,2e3)}},{key:"buildControls",value:function(){for(var e=0;e<this.itemsCount;e++);}},{key:"move",value:function(){this.contador++,this.contador>this.itemsCount-1&&(this.contador=0),this.moveTo(this.contador)}},{key:"resetIndicator",value:function(){document.querySelectorAll(".circle-container li.activeli").forEach(function(e){return e.classList.remove("activeli")})}},{key:"bindEvents",value:function(){var t=this;document.querySelectorAll(".circle-container li.item").forEach(function(e){e.addEventListener("click",t.moveByButton)})}},{key:"moveByButton",value:function(e){var t=n.get(e.currentTarget);this.contador=t,this.moveTo(t)}},{key:"moveTo",value:function(e){var t=100*e;this.resetIndicator(),$(".circle-container  li:nth-child("+(e+1)+")").addClass("activeli"),$(".tab-content-container").css({top:"-"+t+"vh"})}}]),t}())(".tab-content-container");$(".tring-fixed_2").offset();$(".brand").click(function(){$(".brand").toggleClass("nasti")}),$(".nav-link").click(function(){$(".circle-container li:first-child").click(),$.fn.fullpage.moveTo(3);var e=$(".tring-fixed"),t=$(".tring-fixed_2"),n=$("#exta");e.css("transform","translate(-130px)"),t.css({transform:"translateX(280px) translateY(500px)"}),n.css({left:"-150px"});anime({targets:" .nav-fixed",easing:"easeOutExpo",translateX:0});$("#fp-nav").css("top","90%")});anime({targets:".page-- .rightFade",easing:"easeOutExpo",translateX:[{value:0,duration:2500,elasticity:0}],opacity:{value:[0,1],duration:3500}}),anime({targets:" .tring",easing:"easeOutExpo",translateX:[{value:0,duration:3500,elasticity:0}],opacity:{value:[0,1],duration:3500}}),anime({targets:".bd2",rotate:"315deg",easing:"easeOutExpo",duration:3e3}),anime({targets:" .tring2",easing:"easeOutExpo",translateX:[{value:0,duration:3500,elasticity:0}],opacity:{value:[0,1],duration:3500}}),$(".slick-dots li").on("click",function(e){var t=$(".slick-current").attr("data-slick-index");t++,$(".caption").html("Slide number: "+t)});$(".slick-next").on("click",function(e){var t=$(".slick-current").attr("data-slick-index");t++,$(".caption").html("Slide number: "+t)}),$(".slick-prev").on("click",function(e){var t=$(".slick-current").attr("data-slick-index");t++,$(".caption").html("Slide number: "+t)}),$(".slider").on("beforeChange",function(e,t,n,a,i){console.log("beforeChange",n,a)}),$(".slider").on("afterChange",function(e,t,n){console.log("afterChange",n)}),$("#fullpage").fullpage({menu:"#menu",navigation:!0,slidesNavigation:!0,navigationPosition:"left",navigationTooltips:["- 01","- 02","- 03","- 04"],showActiveTooltip:!0,lockAnchors:!0,easing:"easeInOutCubic",easingcss3:"ease",keyboardScrolling:!0,animateAnchor:!0,recordHistory:!0,controlArrows:!0,verticalCentered:!0,anchors:["firstPage","secondPage","fourPage","five"],afterLoad:function(e,t){$(this);var n=$(".tring-fixed"),a=$(".tring-fixed_2"),i=$("#exta");if(1==t){$(".main-screen-fixed").addClass("is-none"),n.css("transform","translate(-460px)"),a.css("transform","translate(460px)"),i.css("left","-150px"),$("#exta1").css("left","0"),$(".name-page").css({transform:" translateY(0px)"});for(var s=$("#article_2").children(),r=0;r<s.length;r++)6!==s[r].nodeType&&s[r].classList.remove("active")}if(2==t){for(s=$("#article_2").children(),r=0;r<s.length;r++)6!==s[r].nodeType&&s[r].classList.add("active");n.css("transform","translate(-130px)"),a.css({transform:"translateX(280px) translateY(500px)"}),i.css({left:"0"})}},onLeave:function(e,t,n){$(this);var a=$("#exta"),i=$(".tring-fixed"),s=$(".tring-fixed_2");a=$("#exta");if(1==e&&"down"==n){$(".main-screen-fixed").removeClass("is-none"),$("#fp-nav ul li .fp-tooltip").css("color","#131116");anime({targets:" .nav-fixed",easing:"easeOutExpo",translateX:0})}else if(2==e&&"up"==n){$("#fp-nav ul li .fp-tooltip").css("color","#f8f8f8"),$(".tring-fixed").removeClass("is-none"),a.css("left","-150px");anime({targets:" .nav-fixed",easing:"easeOutExpo",translateX:200})}else if(2==e&&"down"==n)if($("#fp-nav").css("top","90%"),a.css({left:"-150px"}),$(".com__nav").css({transform:"translateX(0px)"}),w<=1350&&w<=1499?s.css({transform:"translateX(-937px) rotate(-27deg) translateY(-185px)"}):s.css({transform:"translateX(-1077px) rotate(-19deg) translateY(-157px)"}),i.css({transform:"translateY(536px) translateX(-231px) rotate(57deg)"}),w<=1350&&w<=1499)anime({targets:" .nav-fixed",easing:"easeOutExpo",translateX:-1235});else anime({targets:" .nav-fixed",easing:"easeOutExpo",translateX:-1300});else if(3==e&&"up"==n){$(".nav-link").removeAttr("style"),$("#fp-nav").css("top","50%"),$(".tring-fixed").removeClass("is-none"),a.css("left","-150px");anime({targets:" .nav-fixed",easing:"easeOutExpo",translateX:0});i.css("transform","translate(-130px)"),s.css({transform:"translateX(280px) translateY(500px)"})}else if(3==e&&"down"==n){i.css({transform:"translateX(1264px) translateY(483px) rotate(9deg)"}),s.css({transform:"translateX(150px) rotate(52deg) translateY(-94px)"}),$("#fp-nav").css("top","50%"),$(".nav-link").css({left:"-200px",position:"absolute"}),$(".com__nav").css({transform:"translateX(100px)"});anime({targets:" .nav-fixed",easing:"easeOutExpo",translateX:0})}else if(4==e&&"up"==n){if($(".com__nav").css({transform:"translateX(0px)"}),$("#fp-nav").css("top","90%"),a.css({left:"-150px"}),w<=1350&&w<=1499){anime({targets:" .nav-fixed",easing:"easeOutExpo",translateX:-1235});s.css({transform:"translateX(-937px) rotate(-27deg) translateY(-185px)"})}else{anime({targets:" .nav-fixed",easing:"easeOutExpo",translateX:-1300});s.css({transform:"translateX(-1077px) rotate(-19deg) translateY(-157px)"})}i.css({transform:"translateY(536px) translateX(-231px) rotate(57deg)"})}}});var e=$(".com__nav-link"),i=e.parent("li"),s=$(".com__section"),c=s.find("*");e.on("click",function(){var e=$(this).parent("li"),t=e.index(),n=s.eq(t),a=n.find("*");return s.removeClass("active"),c.removeAttr("style"),n.addClass("active"),a.css({transform:"none",opacity:1}),i.removeClass("active"),e.addClass("active"),!1}),s.first().addClass("active"),s.first().find("*").css({transform:"none",opacity:1}),i.first().addClass("active")}}),window.onload=function(){$("body").removeClass("fade")};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInciLCIkIiwid2luZG93Iiwid2lkdGgiLCJkb2N1bWVudCIsInJlYWR5IiwidGVzdCIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsImxvY2F0aW9uIiwiaHJlZiIsImNsaWNrIiwidGFiX2lkIiwidGhpcyIsImF0dHIiLCJ0YWJhY3RpdmUiLCJsZW5ndGgiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwibmV4dCIsInByZXYiLCJzIiwic21hbGxDYXJvdXNlbCIsInNldHRpbmciLCIkd3JhcHBlciIsIiRjb250YWluZXIiLCIkbm9kZXMiLCIkX25vZGVzIiwiJG51bWJlciIsIiRudW1iZXJJdGVtcyIsIiRjdXJyZW50IiwiJGlzQXV0byIsIiRhY0F1dG8iLCJpbml0IiwiaW5pdEV2ZW50cyIsInJlcXVlc3RBbmltRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ3ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJvUmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJjYWxsYmFjayIsImVsZW1lbnQiLCJzZXRUaW1lb3V0IiwicmVxdWVzdEludGVydmFsIiwiZm4iLCJkZWxheSIsInNldEludGVydmFsIiwic3RhcnQiLCJEYXRlIiwiZ2V0VGltZSIsImhhbmRsZSIsIk9iamVjdCIsInZhbHVlIiwibG9vcCIsImN1cnJlbnQiLCJjYWxsIiwiY2xlYXJSZXF1ZXN0SW50ZXJ2YWwiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsIndlYmtpdENhbmNlbFJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1vekNhbmNlbFJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm9DYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtc0NhbmNlbFJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNsZWFySW50ZXJ2YWwiLCJhIiwiY2hlY2siLCJjbGlja0V2ZW50IiwidmVuZG9yIiwib3BlcmEiLCJzdWJzdHIiLCJlYWNoIiwiaSIsIiR0aGlzIiwiZmluZCIsIm9uIiwiZSIsInByZXZlbnREZWZhdWx0IiwiY2xlYXJDYXJvdXNlbCIsImdldFJvdGF0ZSIsImVxIiwiYW5pbWxvb3AiLCJjdXJyZW50U2xpZGUiLCJ4IiwiYXV0b0Nhcm91c2VsIiwiZG9jdW1lbnRFbGVtZW50IiwiY2xhc3NOYW1lIiwib2JqIiwicG9zIiwiYW5nbGUiLCJ3QyIsImRpc3QiLCJNYXRoIiwicm91bmQiLCJjc3MiLCJ0cmFuc2Zvcm0iLCJub3QiLCJJbmRleEZvclNpYiIsIl9jbGFzc0NhbGxDaGVjayIsIl9jcmVhdGVDbGFzcyIsImtleSIsImVsIiwiY2hpbGRyZW4iLCJwYXJlbnROb2RlIiwiU2xpZGVyIiwic2VsZWN0b3IiLCJtb3ZlIiwiYmluZCIsIm1vdmVCeUJ1dHRvbiIsInNsaWRlciIsInF1ZXJ5U2VsZWN0b3IiLCJpdGVtc0NvdW50IiwicXVlcnlTZWxlY3RvckFsbCIsImludGVydmFsIiwiY29udGFkb3IiLCJiaW5kRXZlbnRzIiwiYnVpbGRDb250cm9scyIsIm1vdmVUbyIsImZvckVhY2giLCJpdGVtIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiX3RoaXMiLCJhZGRFdmVudExpc3RlbmVyIiwiZXYiLCJpbmRleCIsImdldCIsImN1cnJlbnRUYXJnZXQiLCJ0b3AiLCJyZXNldEluZGljYXRvciIsIm9mZnNldCIsInRvZ2dsZUNsYXNzIiwiZnVsbHBhZ2UiLCJzdmdfMSIsInN2Z18yIiwibmF2X2IiLCJsZWZ0IiwiYW5pbWUiLCJ0YXJnZXRzIiwiZWFzaW5nIiwidHJhbnNsYXRlWCIsImR1cmF0aW9uIiwiZWxhc3RpY2l0eSIsIm9wYWNpdHkiLCJyb3RhdGUiLCJjdXJyZW50SW5kZXgiLCJodG1sIiwiZXZlbnQiLCJzbGljayIsIm5leHRTbGlkZSIsImNvbnNvbGUiLCJsb2ciLCJtZW51IiwibmF2aWdhdGlvbiIsInNsaWRlc05hdmlnYXRpb24iLCJuYXZpZ2F0aW9uUG9zaXRpb24iLCJuYXZpZ2F0aW9uVG9vbHRpcHMiLCJzaG93QWN0aXZlVG9vbHRpcCIsImxvY2tBbmNob3JzIiwiZWFzaW5nY3NzMyIsImtleWJvYXJkU2Nyb2xsaW5nIiwiYW5pbWF0ZUFuY2hvciIsInJlY29yZEhpc3RvcnkiLCJjb250cm9sQXJyb3dzIiwidmVydGljYWxDZW50ZXJlZCIsImFuY2hvcnMiLCJhZnRlckxvYWQiLCJhbmNob3JMaW5rIiwiY2hpbGROb2RlcyIsIm5vZGVUeXBlIiwiYWRkIiwib25MZWF2ZSIsIm5leHRJbmRleCIsImRpcmVjdGlvbiIsInJlbW92ZUF0dHIiLCJwb3NpdGlvbiIsImxpbmsiLCJsaW5rUGFyZW50IiwicGFyZW50Iiwic2VjdGlvbiIsInNlY3Rpb25Db250ZW50IiwicCIsImMiLCJmaXJzdCIsIm9ubG9hZCJdLCJtYXBwaW5ncyI6IkFBQUEsNlhBQ0EsSUFBQUEsRUFBQUMsRUFBQUMsUUFBQUMsUUFJQUYsRUFBQUcsVUFBQUMsTUFBQSxXQUNBLEdBQUEsa0VBQUFDLEtBQUFDLFVBQUFDLFdBQ0FDLFNBQUFDLEtBQUEsVUFDQSxDQUVBVCxFQUFBLHdCQUFBVSxNQUFBLFdBQ0EsSUFBQUMsRUFBQVgsRUFBQVksTUFBQUMsS0FBQSxZQUVBQyxHQURBZCxFQUFBLHlDQUFBZSxPQUNBZixFQUFBLElBQUFXLElBRUFYLEVBQUEsd0JBQUFnQixZQUFBLFdBQ0FoQixFQUFBLHdCQUFBZ0IsWUFBQSxnQkFDQWhCLEVBQUEsZ0JBQUFnQixZQUFBLFdBRUFoQixFQUFBWSxNQUFBSyxTQUFBLFdBQ0FILEVBQUFHLFNBQUEsV0FDQWpCLEVBQUEsZ0NBQUFrQixPQUFBRCxTQUFBLGdCQUNBakIsRUFBQSxnQ0FBQW1CLE9BQUFGLFNBQUEsa0JBTUEsSUFBQUcsRUFDQUMsR0FDQUMsU0FDQUMsU0FBQXZCLEVBQUEsY0FDQXdCLFdBQUF4QixFQUFBLHFCQUNBeUIsT0FBQXpCLEVBQUEsNkJBQ0EwQixRQUFBMUIsRUFBQSw2QkFBQWUsT0FDQVksUUFBQTNCLEVBQUEsV0FDQTRCLGFBQUE1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QUEsVUFDQWtLLEVBQUFOLFdBQUEsU0FDQXhKLEVBQUFILFNBQUEsVUFFQW1LLEVBQUF4RixLQUNBQyxVQUFBLE9BQ0FnRCxRQUFBLElBR0FrQyxFQUFBL0osWUFBQSxVQUNBbUssRUFBQWxLLFNBQUEsV0FFQSxJQU1BZ0ssRUFBQUksUUFBQXBLLFNBQUEsVUFDQWdLLEVBQUFJLFFBQUE3RyxLQUFBLEtBQUFvQixLQUNBQyxVQUFBLE9BQ0FnRCxRQUFBLElBRUFrQyxFQUFBTSxRQUFBcEssU0FBQSxhQU1BaEIsT0FBQXFMLE9BQUEsV0FDQXRMLEVBQUEsUUFBQWdCLFlBQUEiLCJmaWxlIjoic2NyaXB0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG52YXIgdyA9ICQod2luZG93KS53aWR0aCgpO1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICBEZXRhY3QgTW9iaWxlIEJyb3dzZXJcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XG4gICAgaWYgKC9BbmRyb2lkfHdlYk9TfGlQaG9uZXxpUGFkfGlQb2R8QmxhY2tCZXJyeXxJRU1vYmlsZXxPcGVyfGEgTWluaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpIHtcbiAgICAgICAgbG9jYXRpb24uaHJlZiA9IFwiY3YvXCI7XG4gICAgfSBlbHNlIHtcblxuICAgICAgICAkKCcuY2lyY2xlLWNvbnRhaW5lciBsaScpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHRhYl9pZCA9ICQodGhpcykuYXR0cignZGF0YS10YWInKTtcbiAgICAgICAgICAgIHZhciBub2RlID0gJChcIi50YWItY29udGVudC1jb250YWluZXIgPiAudGFiLWNvbnRlbnRcIikubGVuZ3RoO1xuICAgICAgICAgICAgdmFyIHRhYmFjdGl2ZSA9ICQoXCIjXCIgKyB0YWJfaWQpO1xuICAgICAgICAgICAgdmFyIGRpc3QgPSAyMDAwO1xuICAgICAgICAgICAgJCgnLmNpcmNsZS1jb250YWluZXIgbGknKS5yZW1vdmVDbGFzcygnY3VycmVudCcpO1xuICAgICAgICAgICAgJCgnLmNpcmNsZS1jb250YWluZXIgbGknKS5yZW1vdmVDbGFzcygnY3VycmVudF9vdmVyJyk7XG4gICAgICAgICAgICAkKCcudGFiLWNvbnRlbnQnKS5yZW1vdmVDbGFzcygnY3VycmVudCcpO1xuXG4gICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdjdXJyZW50Jyk7XG4gICAgICAgICAgICB0YWJhY3RpdmUuYWRkQ2xhc3MoJ2N1cnJlbnQnKTtcbiAgICAgICAgICAgICQoJy5jaXJjbGUtY29udGFpbmVyIGxpLmN1cnJlbnQnKS5uZXh0KCkuYWRkQ2xhc3MoXCJjdXJyZW50X292ZXJcIik7XG4gICAgICAgICAgICAkKCcuY2lyY2xlLWNvbnRhaW5lciBsaS5jdXJyZW50JykucHJldigpLmFkZENsYXNzKFwiY3VycmVudF9vdmVyXCIpO1xuXG5cblxuXG4gICAgICAgIH0pXG4gICAgICAgIHZhciBzLFxuICAgICAgICAgICAgc21hbGxDYXJvdXNlbCA9IHtcbiAgICAgICAgICAgICAgICBzZXR0aW5nOiB7XG4gICAgICAgICAgICAgICAgICAgICR3cmFwcGVyOiAkKFwiLmNvbnRhaW5lclwiKSxcbiAgICAgICAgICAgICAgICAgICAgJGNvbnRhaW5lcjogJChcIi5jaXJjbGUtY29udGFpbmVyXCIpLFxuICAgICAgICAgICAgICAgICAgICAkbm9kZXM6ICQoXCIuY2lyY2xlLWNvbnRhaW5lciA+IC5pdGVtXCIpLFxuICAgICAgICAgICAgICAgICAgICAkX25vZGVzOiAkKFwiLmNpcmNsZS1jb250YWluZXIgPiAuaXRlbVwiKS5sZW5ndGgsXG4gICAgICAgICAgICAgICAgICAgICRudW1iZXI6ICQoXCIubnVtYmVyXCIpLFxuICAgICAgICAgICAgICAgICAgICAkbnVtYmVySXRlbXM6ICQoXCIubnVtYmVyID4gbGlcIiksXG4gICAgICAgICAgICAgICAgICAgICRjdXJyZW50OiAwLFxuICAgICAgICAgICAgICAgICAgICAkaXNBdXRvOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgJGFjQXV0bzogNjUwMFxuICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcyA9IHRoaXMuc2V0dGluZztcbiAgICAgICAgICAgICAgICAgICAgLy90aGlzLmFkZEl0ZW1zKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW5pdEV2ZW50cygpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgaW5pdEV2ZW50czogZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltRnJhbWUgPSAoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vUmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm1zUmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oY2FsbGJhY2ssIGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoY2FsbGJhY2ssIDEwMDAgLyA2MCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgfSkoKTtcblxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cucmVxdWVzdEludGVydmFsID0gZnVuY3Rpb24oZm4sIGRlbGF5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICF3aW5kb3cubW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXdpbmRvdy5vUmVxdWVzdEFuaW1hdGlvbkZyYW1lICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIXdpbmRvdy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB3aW5kb3cuc2V0SW50ZXJ2YWwoZm4sIGRlbGF5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdGFydCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZSA9IG5ldyBPYmplY3QoKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gbG9vcCgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY3VycmVudCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWx0YSA9IGN1cnJlbnQgLSBzdGFydDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGVsdGEgPj0gZGVsYXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm4uY2FsbCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGFydCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGUudmFsdWUgPSByZXF1ZXN0QW5pbUZyYW1lKGxvb3ApO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlLnZhbHVlID0gcmVxdWVzdEFuaW1GcmFtZShsb29wKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBoYW5kbGU7XG4gICAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmNsZWFyUmVxdWVzdEludGVydmFsID0gZnVuY3Rpb24oaGFuZGxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZShoYW5kbGUudmFsdWUpIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cud2Via2l0Q2FuY2VsUmVxdWVzdEFuaW1hdGlvbkZyYW1lID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cud2Via2l0Q2FuY2VsUmVxdWVzdEFuaW1hdGlvbkZyYW1lKGhhbmRsZS52YWx1ZSkgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5tb3pDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5tb3pDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUoaGFuZGxlLnZhbHVlKSA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm9DYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5vQ2FuY2VsUmVxdWVzdEFuaW1hdGlvbkZyYW1lKGhhbmRsZS52YWx1ZSkgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5tc0NhbmNlbFJlcXVlc3RBbmltYXRpb25GcmFtZSA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbXNDYW5jZWxSZXF1ZXN0QW5pbWF0aW9uRnJhbWUoaGFuZGxlLnZhbHVlKSA6IGNsZWFySW50ZXJ2YWwoaGFuZGxlKTtcbiAgICAgICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgICAgICAvLz09PT09PT09PT09PT09PT09PT09PT0gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTEzODE3MzAvOTg5NDM5XG5cbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gbW9iaWxlY2hlY2soKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2hlY2sgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIChmdW5jdGlvbihhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKGFuZHJvaWR8aXBhZHxwbGF5Ym9va3xzaWxrfGJiXFxkK3xtZWVnbykuK21vYmlsZXxhdmFudGdvfGJhZGFcXC98YmxhY2tiZXJyeXxibGF6ZXJ8Y29tcGFsfGVsYWluZXxmZW5uZWN8aGlwdG9wfGllbW9iaWxlfGlwKGhvbmV8b2QpfGlyaXN8a2luZGxlfGxnZSB8bWFlbW98bWlkcHxtbXB8bmV0ZnJvbnR8b3BlcmEgbShvYnxpbilpfHBhbG0oIG9zKT98cGhvbmV8cChpeGl8cmUpXFwvfHBsdWNrZXJ8cG9ja2V0fHBzcHxzZXJpZXMoNHw2KTB8c3ltYmlhbnx0cmVvfHVwXFwuKGJyb3dzZXJ8bGluayl8dm9kYWZvbmV8d2FwfHdpbmRvd3MgKGNlfHBob25lKXx4ZGF8eGlpbm8vaS50ZXN0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8xMjA3fDYzMTB8NjU5MHwzZ3NvfDR0aHB8NTBbMS02XWl8Nzcwc3w4MDJzfGEgd2F8YWJhY3xhYyhlcnxvb3xzXFwtKXxhaShrb3xybil8YWwoYXZ8Y2F8Y28pfGFtb2l8YW4oZXh8bnl8eXcpfGFwdHV8YXIoY2h8Z28pfGFzKHRlfHVzKXxhdHR3fGF1KGRpfFxcLW18ciB8cyApfGF2YW58YmUoY2t8bGx8bnEpfGJpKGxifHJkKXxibChhY3xheil8YnIoZXx2KXd8YnVtYnxid1xcLShufHUpfGM1NVxcL3xjYXBpfGNjd2F8Y2RtXFwtfGNlbGx8Y2h0bXxjbGRjfGNtZFxcLXxjbyhtcHxuZCl8Y3Jhd3xkYShpdHxsbHxuZyl8ZGJ0ZXxkY1xcLXN8ZGV2aXxkaWNhfGRtb2J8ZG8oY3xwKW98ZHMoMTJ8XFwtZCl8ZWwoNDl8YWkpfGVtKGwyfHVsKXxlcihpY3xrMCl8ZXNsOHxleihbNC03XTB8b3N8d2F8emUpfGZldGN8Zmx5KFxcLXxfKXxnMSB1fGc1NjB8Z2VuZXxnZlxcLTV8Z1xcLW1vfGdvKFxcLnd8b2QpfGdyKGFkfHVuKXxoYWllfGhjaXR8aGRcXC0obXxwfHQpfGhlaVxcLXxoaShwdHx0YSl8aHAoIGl8aXApfGhzXFwtY3xodChjKFxcLXwgfF98YXxnfHB8c3x0KXx0cCl8aHUoYXd8dGMpfGlcXC0oMjB8Z298bWEpfGkyMzB8aWFjKCB8XFwtfFxcLyl8aWJyb3xpZGVhfGlnMDF8aWtvbXxpbTFrfGlubm98aXBhcXxpcmlzfGphKHR8dilhfGpicm98amVtdXxqaWdzfGtkZGl8a2VqaXxrZ3QoIHxcXC8pfGtsb258a3B0IHxrd2NcXC18a3lvKGN8ayl8bGUobm98eGkpfGxnKCBnfFxcLyhrfGx8dSl8NTB8NTR8XFwtW2Etd10pfGxpYnd8bHlueHxtMVxcLXd8bTNnYXxtNTBcXC98bWEodGV8dWl8eG8pfG1jKDAxfDIxfGNhKXxtXFwtY3J8bWUocmN8cmkpfG1pKG84fG9hfHRzKXxtbWVmfG1vKDAxfDAyfGJpfGRlfGRvfHQoXFwtfCB8b3x2KXx6eil8bXQoNTB8cDF8diApfG13YnB8bXl3YXxuMTBbMC0yXXxuMjBbMi0zXXxuMzAoMHwyKXxuNTAoMHwyfDUpfG43KDAoMHwxKXwxMCl8bmUoKGN8bSlcXC18b258dGZ8d2Z8d2d8d3QpfG5vayg2fGkpfG56cGh8bzJpbXxvcCh0aXx3dil8b3Jhbnxvd2cxfHA4MDB8cGFuKGF8ZHx0KXxwZHhnfHBnKDEzfFxcLShbMS04XXxjKSl8cGhpbHxwaXJlfHBsKGF5fHVjKXxwblxcLTJ8cG8oY2t8cnR8c2UpfHByb3h8cHNpb3xwdFxcLWd8cWFcXC1hfHFjKDA3fDEyfDIxfDMyfDYwfFxcLVsyLTddfGlcXC0pfHF0ZWt8cjM4MHxyNjAwfHJha3N8cmltOXxybyh2ZXx6byl8czU1XFwvfHNhKGdlfG1hfG1tfG1zfG55fHZhKXxzYygwMXxoXFwtfG9vfHBcXC0pfHNka1xcL3xzZShjKFxcLXwwfDEpfDQ3fG1jfG5kfHJpKXxzZ2hcXC18c2hhcnxzaWUoXFwtfG0pfHNrXFwtMHxzbCg0NXxpZCl8c20oYWx8YXJ8YjN8aXR8dDUpfHNvKGZ0fG55KXxzcCgwMXxoXFwtfHZcXC18diApfHN5KDAxfG1iKXx0MigxOHw1MCl8dDYoMDB8MTB8MTgpfHRhKGd0fGxrKXx0Y2xcXC18dGRnXFwtfHRlbChpfG0pfHRpbVxcLXx0XFwtbW98dG8ocGx8c2gpfHRzKDcwfG1cXC18bTN8bTUpfHR4XFwtOXx1cChcXC5ifGcxfHNpKXx1dHN0fHY0MDB8djc1MHx2ZXJpfHZpKHJnfHRlKXx2ayg0MHw1WzAtM118XFwtdil8dm00MHx2b2RhfHZ1bGN8dngoNTJ8NTN8NjB8NjF8NzB8ODB8ODF8ODN8ODV8OTgpfHczYyhcXC18ICl8d2ViY3x3aGl0fHdpKGcgfG5jfG53KXx3bWxifHdvbnV8eDcwMHx5YXNcXC18eW91cnx6ZXRvfHp0ZVxcLS9pLnRlc3QoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhLnN1YnN0cigwLCA0KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVjayA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KShuYXZpZ2F0b3IudXNlckFnZW50IHx8IG5hdmlnYXRvci52ZW5kb3IgfHwgd2luZG93Lm9wZXJhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjaGVjaztcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHZhciBjbGlja0V2ZW50ID0gbW9iaWxlY2hlY2soKSA/IFwidG91Y2hzdGFydFwiIDogXCJjbGlja1wiO1xuXG4gICAgICAgICAgICAgICAgICAgICQuZWFjaChzLiRub2RlcywgZnVuY3Rpb24oaSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICR0aGlzLmZpbmQoXCJhXCIpLm9uKGNsaWNrRXZlbnQsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJDYXJvdXNlbChpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbWFsbENhcm91c2VsLmdldFJvdGF0ZSgkdGhpcywgaSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAkLmVhY2gocy4kbnVtYmVySXRlbXMsIGZ1bmN0aW9uKGkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy5maW5kKFwiYVwiKS5vbihjbGlja0V2ZW50LCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyQ2Fyb3VzZWwoaSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc21hbGxDYXJvdXNlbC5nZXRSb3RhdGUocy4kbm9kZXMuZXEoaSksIGkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBhbmltbG9vcCA9IGZ1bmN0aW9uKGN1cnJlbnRTbGlkZSkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocy4kaXNBdXRvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHMuJGN1cnJlbnQgPT09IHMuJF9ub2RlcyAtIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcy4kY3VycmVudCA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcy4kY3VycmVudCsrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcy4kY3VycmVudCA9IGN1cnJlbnRTbGlkZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHNtYWxsQ2Fyb3VzZWwuZ2V0Um90YXRlKHMuJG5vZGVzLmVxKHMuJGN1cnJlbnQpLCBzLiRjdXJyZW50KTtcbiAgICAgICAgICAgICAgICAgICAgfTtcblxuXG4gICAgICAgICAgICAgICAgICAgIHZhciBjbGVhckNhcm91c2VsID0gZnVuY3Rpb24oeCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJSZXF1ZXN0SW50ZXJ2YWwoYXV0b0Nhcm91c2VsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHMuJGlzQXV0byA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgYW5pbWxvb3AoeCk7XG4gICAgICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGF1dG9DYXJvdXNlbCA9IHJlcXVlc3RJbnRlcnZhbChhbmltbG9vcCwgcy4kYWNBdXRvKTtcblxuICAgICAgICAgICAgICAgICAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIEF2b2lkIDpob3ZlclxuXG4gICAgICAgICAgICAgICAgICAgIGlmICghKFwib250b3VjaHN0YXJ0XCIgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTmFtZSArPSBcIiBuby10b3VjaFwiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgIGdldFJvdGF0ZTogZnVuY3Rpb24ob2JqLCBwb3MpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGFuZ2xlID0gMzYwIC8gcy4kX25vZGVzLFxuICAgICAgICAgICAgICAgICAgICAgICAgcm90ID0gNzIwLCAvLyBTdGFydGluZyBhbmdsZSBvZiB0aGUgZmlyc3QgaXRlbVxuICAgICAgICAgICAgICAgICAgICAgICAgd0MgPSBzLiRjb250YWluZXIud2lkdGgoKTtcblxuXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcy4kX25vZGVzOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBkaXN0ID0gTWF0aC5yb3VuZChyb3QgKyBhbmdsZSAqIGkgKyAtYW5nbGUgKiBwb3MpOyAvLyBub3RoaW5nIGNsZXZlciwgYnV0IGl0IHdvcmtzIVxuICAgICAgICAgICAgICAgICAgICAgICAgcy4kbm9kZXMuZXEoaSkuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwicm90YXRlKFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzdCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZGVnKSB0cmFuc2xhdGUoXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3QyAvIDIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInB4KSByb3RhdGUoLVwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzdCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZGVnKVwiXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzLiRub2Rlc1xuICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmQoXCJhXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAubm90KG9iailcbiAgICAgICAgICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcImFjdGl2ZWRvaXRcIik7XG4gICAgICAgICAgICAgICAgICAgIG9iai5maW5kKFwiYVwiKS5hZGRDbGFzcyhcImFjdGl2ZWRvaXRcIik7XG4gICAgICAgICAgICAgICAgICAgIHMuJG51bWJlckl0ZW1zXG4gICAgICAgICAgICAgICAgICAgICAgICAuZmluZChcImFcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIC5ub3Qocy4kbnVtYmVySXRlbXMuZXEocG9zKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5yZW1vdmVDbGFzcyhcImFjdGl2ZWRvaXRcIik7XG4gICAgICAgICAgICAgICAgICAgIHMuJG51bWJlckl0ZW1zXG4gICAgICAgICAgICAgICAgICAgICAgICAuZXEocG9zKVxuICAgICAgICAgICAgICAgICAgICAgICAgLmZpbmQoXCJhXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAubm90KClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hZGRDbGFzcyhcImFjdGl2ZWRvaXRcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgc21hbGxDYXJvdXNlbC5pbml0KCk7XG4gICAgICAgIGNsYXNzIEluZGV4Rm9yU2liIHtcbiAgICAgICAgICAgIHN0YXRpYyBnZXQoZWwpIHtcbiAgICAgICAgICAgICAgICBsZXQgY2hpbGRyZW4gPSBlbC5wYXJlbnROb2RlLmNoaWxkcmVuO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNoaWxkID0gY2hpbGRyZW5baV07XG4gICAgICAgICAgICAgICAgICAgIGlmIChjaGlsZCA9PSBlbCkgcmV0dXJuIGk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNsYXNzIFNsaWRlciB7XG4gICAgICAgICAgICBjb25zdHJ1Y3RvcihzZWxlY3Rvcikge1xuICAgICAgICAgICAgICAgIHRoaXMubW92ZSA9IHRoaXMubW92ZS5iaW5kKHRoaXMpO1xuICAgICAgICAgICAgICAgIHRoaXMubW92ZUJ5QnV0dG9uID0gdGhpcy5tb3ZlQnlCdXR0b24uYmluZCh0aGlzKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNsaWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICAgICAgICAgICAgICAgIHRoaXMuaXRlbXNDb3VudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIudGFiLWNvbnRlbnQtY29udGFpbmVyID4gKlwiKS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgdGhpcy5pbnRlcnZhbCA9IG51bGw7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250YWRvciA9IDA7XG4gICAgICAgICAgICAgICAgLy90aGlzLnN0YXJ0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5iaW5kRXZlbnRzKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5idWlsZENvbnRyb2xzKCk7XG5cblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBzdGFydCgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmludGVydmFsID0gd2luZG93LnNldEludGVydmFsKHRoaXMubW92ZSwgMjAwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBidWlsZENvbnRyb2xzKCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5pdGVtc0NvdW50OyBpKyspIHtcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1vdmUoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250YWRvcisrO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNvbnRhZG9yID4gdGhpcy5pdGVtc0NvdW50IC0gMSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRhZG9yID0gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5tb3ZlVG8odGhpcy5jb250YWRvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXNldEluZGljYXRvcigpIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmNpcmNsZS1jb250YWluZXIgbGkuYWN0aXZlbGlcIilcbiAgICAgICAgICAgICAgICAgICAgLmZvckVhY2goaXRlbSA9PiBpdGVtLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVsaVwiKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBiaW5kRXZlbnRzKCkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY2lyY2xlLWNvbnRhaW5lciBsaS5pdGVtXCIpLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMubW92ZUJ5QnV0dG9uKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG1vdmVCeUJ1dHRvbihldikge1xuICAgICAgICAgICAgICAgIGxldCBpbmRleCA9IEluZGV4Rm9yU2liLmdldChldi5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRhZG9yID0gaW5kZXg7XG4gICAgICAgICAgICAgICAgdGhpcy5tb3ZlVG8oaW5kZXgpO1xuXG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbW92ZVRvKGluZGV4KSB7XG4gICAgICAgICAgICAgICAgbGV0IHRvcCA9IGluZGV4ICogMTAwO1xuICAgICAgICAgICAgICAgIHRoaXMucmVzZXRJbmRpY2F0b3IoKTtcbiAgICAgICAgICAgICAgICAkKFwiLmNpcmNsZS1jb250YWluZXIgIGxpOm50aC1jaGlsZChcIiArIChpbmRleCArIDEpICsgXCIpXCIpLmFkZENsYXNzKFwiYWN0aXZlbGlcIik7XG4gICAgICAgICAgICAgICAgdmFyIGVsZW1lbnQgPSAkKCcudGFiLWNvbnRlbnQtY29udGFpbmVyJyk7XG5cbiAgICAgICAgICAgICAgICBlbGVtZW50LmNzcyh7XG4gICAgICAgICAgICAgICAgICAgIFwidG9wXCI6IFwiLVwiICsgdG9wICsgXCJ2aFwiXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbmV3IFNsaWRlcihcIi50YWItY29udGVudC1jb250YWluZXJcIik7XG4gICAgICAgIHZhciBiID0gJCgnLnRyaW5nLWZpeGVkXzInKTtcbiAgICAgICAgdmFyIGN3ID0gYi5vZmZzZXQoKTtcbiAgICAgICAgJCgnLmJyYW5kJykuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkKCcuYnJhbmQnKS50b2dnbGVDbGFzcygnbmFzdGknKTtcbiAgICAgICAgICAgIC8vJCgnYm9keScpLnRvZ2dsZUNsYXNzKCdvcGVuTWVudScpO1xuICAgICAgICB9KVxuICAgICAgICAkKCcubmF2LWxpbmsnKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICQoJy5jaXJjbGUtY29udGFpbmVyIGxpOmZpcnN0LWNoaWxkJykuY2xpY2soKTtcbiAgICAgICAgICAgICQuZm4uZnVsbHBhZ2UubW92ZVRvKDMpO1xuICAgICAgICAgICAgdmFyIHN2Z18xID0gJCgnLnRyaW5nLWZpeGVkJyk7XG4gICAgICAgICAgICB2YXIgc3ZnXzIgPSAkKCcudHJpbmctZml4ZWRfMicpO1xuICAgICAgICAgICAgdmFyIG5hdl9iID0gJCgnI2V4dGEnKTtcbiAgICAgICAgICAgIHN2Z18xLmNzcygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgtMTMwcHgpJyk7XG4gICAgICAgICAgICBzdmdfMi5jc3Moe1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVYKDI4MHB4KSB0cmFuc2xhdGVZKDUwMHB4KVwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIG5hdl9iLmNzcyh7XG4gICAgICAgICAgICAgICAgbGVmdDogJy0xNTBweCdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdmFyIGZpeGVkX21lbnVfaW4gPSBhbmltZSh7XG4gICAgICAgICAgICAgICAgdGFyZ2V0czogJyAubmF2LWZpeGVkJyxcbiAgICAgICAgICAgICAgICBlYXNpbmc6ICdlYXNlT3V0RXhwbycsXG4gICAgICAgICAgICAgICAgdHJhbnNsYXRlWDogMFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAkKCcjZnAtbmF2JykuY3NzKCd0b3AnLCAnOTAlJyk7XG4gICAgICAgIH0pO1xuICAgICAgICB2YXIga2V5ZnJhbWVzID0gYW5pbWUoe1xuICAgICAgICAgICAgdGFyZ2V0czogJy5wYWdlLS0gLnJpZ2h0RmFkZScsXG4gICAgICAgICAgICBlYXNpbmc6ICdlYXNlT3V0RXhwbycsXG4gICAgICAgICAgICB0cmFuc2xhdGVYOiBbe1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMCxcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDI1MDAsXG4gICAgICAgICAgICAgICAgICAgIGVsYXN0aWNpdHk6IDBcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBvcGFjaXR5OiB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IFswLCAxXSxcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMzUwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSlcblxuICAgICAgICB2YXIgdHJpbmcgPSBhbmltZSh7XG4gICAgICAgICAgICB0YXJnZXRzOiAnIC50cmluZycsXG4gICAgICAgICAgICBlYXNpbmc6ICdlYXNlT3V0RXhwbycsXG4gICAgICAgICAgICB0cmFuc2xhdGVYOiBbe1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMCxcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDM1MDAsXG4gICAgICAgICAgICAgICAgICAgIGVsYXN0aWNpdHk6IDBcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBvcGFjaXR5OiB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IFswLCAxXSxcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMzUwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSlcbiAgICAgICAgdmFyIGJkMiA9IGFuaW1lKHtcbiAgICAgICAgICAgIHRhcmdldHM6ICcuYmQyJyxcbiAgICAgICAgICAgIHJvdGF0ZTogJzMxNWRlZycsXG4gICAgICAgICAgICBlYXNpbmc6ICdlYXNlT3V0RXhwbycsXG4gICAgICAgICAgICBkdXJhdGlvbjogMzAwMFxuICAgICAgICB9KTtcbiAgICAgICAgdmFyIHRyaW5nMiA9IGFuaW1lKHtcbiAgICAgICAgICAgIHRhcmdldHM6ICcgLnRyaW5nMicsXG4gICAgICAgICAgICBlYXNpbmc6ICdlYXNlT3V0RXhwbycsXG4gICAgICAgICAgICB0cmFuc2xhdGVYOiBbe1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMCxcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDM1MDAsXG4gICAgICAgICAgICAgICAgICAgIGVsYXN0aWNpdHk6IDBcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBvcGFjaXR5OiB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IFswLCAxXSxcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMzUwMFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSlcblxuICAgICAgICB2YXIgJGdldFBvc2kgPSAkKCcuc2xpY2stZG90cyBsaScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIHZhciBjdXJyZW50SW5kZXggPSAkKCcuc2xpY2stY3VycmVudCcpLmF0dHIoJ2RhdGEtc2xpY2staW5kZXgnKTtcbiAgICAgICAgICAgIGN1cnJlbnRJbmRleCsrO1xuICAgICAgICAgICAgJCgnLmNhcHRpb24nKS5odG1sKCdTbGlkZSBudW1iZXI6ICcgKyBjdXJyZW50SW5kZXgpO1xuXG4gICAgICAgIH0pO1xuICAgICAgICAkKCcuc2xpY2stbmV4dCcpLm9uKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIHZhciBjdXJyZW50SW5kZXggPSAkKCcuc2xpY2stY3VycmVudCcpLmF0dHIoJ2RhdGEtc2xpY2staW5kZXgnKTtcbiAgICAgICAgICAgIGN1cnJlbnRJbmRleCsrO1xuICAgICAgICAgICAgJCgnLmNhcHRpb24nKS5odG1sKCdTbGlkZSBudW1iZXI6ICcgKyBjdXJyZW50SW5kZXgpO1xuICAgICAgICB9KTtcbiAgICAgICAgJCgnLnNsaWNrLXByZXYnKS5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICB2YXIgY3VycmVudEluZGV4ID0gJCgnLnNsaWNrLWN1cnJlbnQnKS5hdHRyKCdkYXRhLXNsaWNrLWluZGV4Jyk7XG4gICAgICAgICAgICBjdXJyZW50SW5kZXgrKztcbiAgICAgICAgICAgICQoJy5jYXB0aW9uJykuaHRtbCgnU2xpZGUgbnVtYmVyOiAnICsgY3VycmVudEluZGV4KTtcbiAgICAgICAgfSk7XG4gICAgICAgICQoJy5zbGlkZXInKS5vbignYmVmb3JlQ2hhbmdlJywgZnVuY3Rpb24oZXZlbnQsIHNsaWNrLCBjdXJyZW50U2xpZGUsIG5leHRTbGlkZSwgaSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2JlZm9yZUNoYW5nZScsIGN1cnJlbnRTbGlkZSwgbmV4dFNsaWRlKTtcbiAgICAgICAgfSk7XG4gICAgICAgICQoJy5zbGlkZXInKS5vbignYWZ0ZXJDaGFuZ2UnLCBmdW5jdGlvbihldmVudCwgc2xpY2ssIGN1cnJlbnRTbGlkZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2FmdGVyQ2hhbmdlJywgY3VycmVudFNsaWRlKTtcbiAgICAgICAgfSk7XG4gICAgICAgICQoJyNmdWxscGFnZScpLmZ1bGxwYWdlKHtcbiAgICAgICAgICAgIG1lbnU6ICcjbWVudScsXG4gICAgICAgICAgICBuYXZpZ2F0aW9uOiB0cnVlLFxuICAgICAgICAgICAgc2xpZGVzTmF2aWdhdGlvbjogdHJ1ZSxcbiAgICAgICAgICAgIG5hdmlnYXRpb25Qb3NpdGlvbjogJ2xlZnQnLFxuICAgICAgICAgICAgbmF2aWdhdGlvblRvb2x0aXBzOiBbJy0gMDEnLCAnLSAwMicsICctIDAzJywgJy0gMDQnXSxcbiAgICAgICAgICAgIHNob3dBY3RpdmVUb29sdGlwOiB0cnVlLFxuICAgICAgICAgICAgbG9ja0FuY2hvcnM6IHRydWUsXG4gICAgICAgICAgICBlYXNpbmc6ICdlYXNlSW5PdXRDdWJpYycsXG4gICAgICAgICAgICBlYXNpbmdjc3MzOiAnZWFzZScsXG4gICAgICAgICAgICBrZXlib2FyZFNjcm9sbGluZzogdHJ1ZSxcbiAgICAgICAgICAgIGFuaW1hdGVBbmNob3I6IHRydWUsXG4gICAgICAgICAgICByZWNvcmRIaXN0b3J5OiB0cnVlLFxuICAgICAgICAgICAgY29udHJvbEFycm93czogdHJ1ZSxcbiAgICAgICAgICAgIHZlcnRpY2FsQ2VudGVyZWQ6IHRydWUsXG5cbiAgICAgICAgICAgIGFuY2hvcnM6IFsnZmlyc3RQYWdlJywgJ3NlY29uZFBhZ2UnLCAnZm91clBhZ2UnLCAnZml2ZSddLFxuICAgICAgICAgICAgYWZ0ZXJMb2FkOiBmdW5jdGlvbihhbmNob3JMaW5rLCBpbmRleCkge1xuICAgICAgICAgICAgICAgIHZhciBsb2FkZWRTZWN0aW9uID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICB2YXIgc3ZnXzEgPSAkKCcudHJpbmctZml4ZWQnKTtcbiAgICAgICAgICAgICAgICB2YXIgc3ZnXzIgPSAkKCcudHJpbmctZml4ZWRfMicpO1xuICAgICAgICAgICAgICAgIHZhciBuYXZfYiA9ICQoJyNleHRhJyk7XG4gICAgICAgICAgICAgICAgLy91c2luZyBpbmRleFxuICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICQoJy5tYWluLXNjcmVlbi1maXhlZCcpLmFkZENsYXNzKCdpcy1ub25lJyk7XG4gICAgICAgICAgICAgICAgICAgIHN2Z18xLmNzcygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgtNDYwcHgpJyk7XG4gICAgICAgICAgICAgICAgICAgIHN2Z18yLmNzcygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSg0NjBweCknKTtcbiAgICAgICAgICAgICAgICAgICAgbmF2X2IuY3NzKCdsZWZ0JywgJy0xNTBweCcpO1xuICAgICAgICAgICAgICAgICAgICAkKCcjZXh0YTEnKS5jc3MoJ2xlZnQnLCAnMCcpO1xuICAgICAgICAgICAgICAgICAgICAkKCcubmFtZS1wYWdlJykuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCIgdHJhbnNsYXRlWSgwcHgpXCJcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgdmFyIGNoaWxkTm9kZXMgPSAkKCcjYXJ0aWNsZV8yJykuY2hpbGRyZW4oKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGlsZE5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGROb2Rlc1tpXS5ub2RlVHlwZSAhPT0gNikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkTm9kZXNbaV0uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGluZGV4ID09IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNoaWxkTm9kZXMgPSAkKCcjYXJ0aWNsZV8yJykuY2hpbGRyZW4oKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGlsZE5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY2hpbGROb2Rlc1tpXS5ub2RlVHlwZSAhPT0gNikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkTm9kZXNbaV0uY2xhc3NMaXN0LmFkZChcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzdmdfMS5jc3MoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoLTEzMHB4KScpO1xuICAgICAgICAgICAgICAgICAgICBzdmdfMi5jc3Moe1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVgoMjgwcHgpIHRyYW5zbGF0ZVkoNTAwcHgpXCJcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIG5hdl9iLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAnMCdcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICB9XG5cblxuXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb25MZWF2ZTogZnVuY3Rpb24oaW5kZXgsIG5leHRJbmRleCwgZGlyZWN0aW9uKSB7XG4gICAgICAgICAgICAgICAgdmFyIGxlYXZpbmdTZWN0aW9uID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICB2YXIgbmF2X2IgPSAkKCcjZXh0YScpO1xuICAgICAgICAgICAgICAgIHZhciBzdmdfMSA9ICQoJy50cmluZy1maXhlZCcpO1xuICAgICAgICAgICAgICAgIHZhciBzdmdfMiA9ICQoJy50cmluZy1maXhlZF8yJyk7XG4gICAgICAgICAgICAgICAgdmFyIG5hdl9iID0gJCgnI2V4dGEnKTtcblxuICAgICAgICAgICAgICAgIC8vYWZ0ZXIgbGVhdmluZyBzZWN0aW9uIDJcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggPT0gMSAmJiBkaXJlY3Rpb24gPT0gJ2Rvd24nKSB7XG4gICAgICAgICAgICAgICAgICAgICQoJy5tYWluLXNjcmVlbi1maXhlZCcpLnJlbW92ZUNsYXNzKCdpcy1ub25lJyk7XG4gICAgICAgICAgICAgICAgICAgICQoJyNmcC1uYXYgdWwgbGkgLmZwLXRvb2x0aXAnKS5jc3MoJ2NvbG9yJywgJyMxMzExMTYnKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpeGVkX21lbnVfaW4gPSBhbmltZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRzOiAnIC5uYXYtZml4ZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZWFzaW5nOiAnZWFzZU91dEV4cG8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRlWDogMFxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaW5kZXggPT0gMiAmJiBkaXJlY3Rpb24gPT0gJ3VwJykge1xuICAgICAgICAgICAgICAgICAgICAkKCcjZnAtbmF2IHVsIGxpIC5mcC10b29sdGlwJykuY3NzKCdjb2xvcicsICcjZjhmOGY4Jyk7XG4gICAgICAgICAgICAgICAgICAgICQoJy50cmluZy1maXhlZCcpLnJlbW92ZUNsYXNzKCdpcy1ub25lJyk7XG4gICAgICAgICAgICAgICAgICAgIG5hdl9iLmNzcygnbGVmdCcsICctMTUwcHgnKTtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgZml4ZWRfbWVudV9vdXQgPSBhbmltZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRzOiAnIC5uYXYtZml4ZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZWFzaW5nOiAnZWFzZU91dEV4cG8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRlWDogMjAwXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG5cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGluZGV4ID09IDIgJiYgZGlyZWN0aW9uID09ICdkb3duJykge1xuICAgICAgICAgICAgICAgICAgICAkKCcjZnAtbmF2JykuY3NzKCd0b3AnLCAnOTAlJyk7XG4gICAgICAgICAgICAgICAgICAgIG5hdl9iLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAnLTE1MHB4J1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgJCgnLmNvbV9fbmF2JykuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVYKDBweClcIlxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHcgPD0gMTM1MCAmJiB3IDw9IDE0OTkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN2Z18yLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVgoLTkzN3B4KSByb3RhdGUoLTI3ZGVnKSB0cmFuc2xhdGVZKC0xODVweClcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN2Z18yLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVgoLTEwNzdweCkgcm90YXRlKC0xOWRlZykgdHJhbnNsYXRlWSgtMTU3cHgpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgc3ZnXzEuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKDUzNnB4KSB0cmFuc2xhdGVYKC0yMzFweCkgcm90YXRlKDU3ZGVnKVwiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICh3IDw9IDEzNTAgJiYgdyA8PSAxNDk5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZml4ZWRfbWVudV9pbiA9IGFuaW1lKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRzOiAnIC5uYXYtZml4ZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVhc2luZzogJ2Vhc2VPdXRFeHBvJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGVYOiAtMTIzNVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZml4ZWRfbWVudV9pbiA9IGFuaW1lKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRzOiAnIC5uYXYtZml4ZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVhc2luZzogJ2Vhc2VPdXRFeHBvJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGVYOiAtMTMwMFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpbmRleCA9PSAzICYmIGRpcmVjdGlvbiA9PSAndXAnKSB7XG4gICAgICAgICAgICAgICAgICAgICQoJy5uYXYtbGluaycpLnJlbW92ZUF0dHIoJ3N0eWxlJyk7XG4gICAgICAgICAgICAgICAgICAgICQoJyNmcC1uYXYnKS5jc3MoJ3RvcCcsICc1MCUnKTtcbiAgICAgICAgICAgICAgICAgICAgJCgnLnRyaW5nLWZpeGVkJykucmVtb3ZlQ2xhc3MoJ2lzLW5vbmUnKTtcbiAgICAgICAgICAgICAgICAgICAgbmF2X2IuY3NzKCdsZWZ0JywgJy0xNTBweCcpO1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciBmaXhlZF9tZW51X2luID0gYW5pbWUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0czogJyAubmF2LWZpeGVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVhc2luZzogJ2Vhc2VPdXRFeHBvJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZVg6IDBcbiAgICAgICAgICAgICAgICAgICAgfSlcblxuXG4gICAgICAgICAgICAgICAgICAgIHN2Z18xLmNzcygndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgtMTMwcHgpJyk7XG4gICAgICAgICAgICAgICAgICAgIHN2Z18yLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWCgyODBweCkgdHJhbnNsYXRlWSg1MDBweClcIlxuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaW5kZXggPT0gMyAmJiBkaXJlY3Rpb24gPT0gJ2Rvd24nKSB7XG4gICAgICAgICAgICAgICAgICAgIHN2Z18xLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWCgxMjY0cHgpIHRyYW5zbGF0ZVkoNDgzcHgpIHJvdGF0ZSg5ZGVnKVwiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBzdmdfMi5jc3Moe1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVgoMTUwcHgpIHJvdGF0ZSg1MmRlZykgdHJhbnNsYXRlWSgtOTRweClcIlxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgJCgnI2ZwLW5hdicpLmNzcygndG9wJywgJzUwJScpO1xuICAgICAgICAgICAgICAgICAgICAkKCcubmF2LWxpbmsnKS5jc3Moe1xuICAgICAgICAgICAgICAgICAgICAgICAgJ2xlZnQnOiAnLTIwMHB4JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdwb3NpdGlvbic6ICdhYnNvbHV0ZSdcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICQoJy5jb21fX25hdicpLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWCgxMDBweClcIlxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpeGVkX21lbnVfaW4gPSBhbmltZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXRzOiAnIC5uYXYtZml4ZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZWFzaW5nOiAnZWFzZU91dEV4cG8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRlWDogMFxuICAgICAgICAgICAgICAgICAgICB9KTtcblxuXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChpbmRleCA9PSA0ICYmIGRpcmVjdGlvbiA9PSAndXAnKSB7XG4gICAgICAgICAgICAgICAgICAgICQoJy5jb21fX25hdicpLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWCgwcHgpXCJcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICQoJyNmcC1uYXYnKS5jc3MoJ3RvcCcsICc5MCUnKTtcbiAgICAgICAgICAgICAgICAgICAgbmF2X2IuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6ICctMTUwcHgnXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAodyA8PSAxMzUwICYmIHcgPD0gMTQ5OSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGZpeGVkX21lbnVfaW4gPSBhbmltZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0czogJyAubmF2LWZpeGVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlYXNpbmc6ICdlYXNlT3V0RXhwbycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRlWDogLTEyMzVcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3ZnXzIuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IFwidHJhbnNsYXRlWCgtOTM3cHgpIHJvdGF0ZSgtMjdkZWcpIHRyYW5zbGF0ZVkoLTE4NXB4KVwiXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBmaXhlZF9tZW51X2luID0gYW5pbWUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldHM6ICcgLm5hdi1maXhlZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWFzaW5nOiAnZWFzZU91dEV4cG8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zbGF0ZVg6IC0xMzAwXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN2Z18yLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZVgoLTEwNzdweCkgcm90YXRlKC0xOWRlZykgdHJhbnNsYXRlWSgtMTU3cHgpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgc3ZnXzEuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKDUzNnB4KSB0cmFuc2xhdGVYKC0yMzFweCkgcm90YXRlKDU3ZGVnKVwiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcblxuXG5cbiAgICAgICAgfSk7IC8vZW5kIGZ1bGxwYWdlXG4gICAgICAgIC8vTmF2IFVJXG4gICAgICAgIHZhciBsaW5rID0gJCgnLmNvbV9fbmF2LWxpbmsnKTtcbiAgICAgICAgdmFyIGxpbmtQYXJlbnQgPSBsaW5rLnBhcmVudCgnbGknKTtcbiAgICAgICAgdmFyIHNlY3Rpb24gPSAkKCcuY29tX19zZWN0aW9uJyk7XG4gICAgICAgIHZhciBzZWN0aW9uQ29udGVudCA9IHNlY3Rpb24uZmluZCgnKicpO1xuXG4gICAgICAgIHZhciBzd2l0Y2hUYWIgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBwID0gJCh0aGlzKS5wYXJlbnQoJ2xpJyk7XG4gICAgICAgICAgICB2YXIgaSA9IHAuaW5kZXgoKTtcbiAgICAgICAgICAgIHZhciBzID0gc2VjdGlvbi5lcShpKTtcbiAgICAgICAgICAgIHZhciBjID0gcy5maW5kKCcqJyk7XG5cbiAgICAgICAgICAgIHNlY3Rpb24ucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgc2VjdGlvbkNvbnRlbnQucmVtb3ZlQXR0cignc3R5bGUnKTtcbiAgICAgICAgICAgIHMuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuXG4gICAgICAgICAgICBjLmNzcyh7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiAnbm9uZScsXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGxpbmtQYXJlbnQucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgcC5hZGRDbGFzcygnYWN0aXZlJyk7XG5cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfTtcblxuICAgICAgICBsaW5rLm9uKCdjbGljaycsIHN3aXRjaFRhYik7XG5cbiAgICAgICAgZnVuY3Rpb24gYWN0aXZlRmlyc3QoKSB7XG4gICAgICAgICAgICBzZWN0aW9uLmZpcnN0KCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgc2VjdGlvbi5maXJzdCgpLmZpbmQoJyonKS5jc3Moe1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogJ25vbmUnLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbGlua1BhcmVudC5maXJzdCgpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGFjdGl2ZUZpcnN0KCk7XG4gICAgfSAvLyBlbmQgaWZcbn0pIC8vRW5kIGRvY3VtZW50ZVxud2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygnZmFkZScpO1xufSJdfQ==
